au BufRead,BufNewFile *.smach_model setfiletype smach_model
au BufRead,BufNewFile *.ros_package setfiletype yaml
syntax on

set autoread
:au CursorHold * checktime

" color settting
set background=dark
let g:solarized_termcolors=256
colorscheme solarized

" Highlight current line
set cursorline

" Enable mouse in all modes
"set mouse=a

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

set number


" Show matching brackets when text indicator is over them
set showmatch
" " How many tenths of a second to blink when matching brackets
set mat=2

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" Set extra options when running in GUI mode
"if has("gui_running")
"  set guioptions-=T
"  set guioptions+=e
"  set t_Co=256
"  set guitablabel=%M\ %t
"endif


""""""""""""""""""""""""""""""
" => Status line
""""""""""""""""""""""""""""""
" Always show the status line
set laststatus=2

" Format the status line
"set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l



" Returns true if paste mode is enabled
function! HasPaste()
  if &paste
    return 'PASTE MODE  '
  en
  return ''
endfunction


if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'tpope/vim-fugitive'
NeoBundle 'bling/vim-airline'


filetype plugin indent on     " Required!

NeoBundleCheck

let g:Powerline_theme="skwp"

let g:Powerline_colorscheme="skwp"

let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
